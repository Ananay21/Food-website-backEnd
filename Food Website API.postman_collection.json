{
	"info": {
		"_postman_id": "a58fe83c-e9c2-4589-ac1e-90915d202747",
		"name": "Food Website API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38740511"
	},
	"item": [
		{
			"name": "Get all menuItems",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/menu/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"menu",
						""
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Get single menuItem",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/menu/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"menu",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "679ddf0c6f7551bbe3f5878e"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add menuItem",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "",
							"type": "text"
						},
						{
							"key": "category",
							"value": "",
							"type": "text"
						},
						{
							"key": "price",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/menu/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"menu",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update menuItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Pink Sauce Pasta",
							"type": "text"
						},
						{
							"key": "category",
							"value": "Appetizers",
							"type": "text"
						},
						{
							"key": "price",
							"value": "350",
							"type": "text"
						},
						{
							"key": "availability",
							"value": "true",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/menu/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"menu",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "679ddf0c6f7551bbe3f5878e"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete menuItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/menu/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"menu",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "679ddff46f7551bbe3f58798"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Register User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "userName",
							"value": "Annna",
							"type": "text"
						},
						{
							"key": "passWord",
							"value": "12345",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/user/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"register"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Login User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "userName",
							"value": "Annna",
							"type": "text"
						},
						{
							"key": "passWord",
							"value": "12345",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/user/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout USer",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/user/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Order",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userID\":\"679c807f9d521698851fc054\",\r\n    \"selectedItems\":[\r\n        {\r\n            \"itemID\":\"679ddf236f7551bbe3f58790\",\r\n            \"quantity\":2   \r\n        },\r\n        {\r\n            \"itemID\":\"679ddfc36f7551bbe3f58792\",\r\n            \"quantity\":1\r\n        }\r\n    ],\r\n    \"totalAmount\":850,\r\n    \"status\":\"Pending\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/order",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Orders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/order/orders/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"order",
						"orders",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "679c807f9d521698851fc054"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}